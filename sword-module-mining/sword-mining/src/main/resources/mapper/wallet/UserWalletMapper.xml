<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soyatec.sword.wallet.mapper.UserWalletMapper">
    
    <resultMap type="UserWallet" id="UserWalletResult">
        <result property="userId"    column="user_id"    />
        <result property="name"    column="name"    />
        <result property="mnemonic"    column="mnemonic"    />
        <result property="password"    column="password"    />
        <result property="salt"    column="salt"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectUserWalletVo">
        select user_id, name, mnemonic, password, salt, create_time, update_time, remark from t_user_wallet
    </sql>

    <select id="selectUserWalletList" parameterType="UserWallet" resultMap="UserWalletResult">
        <include refid="selectUserWalletVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="mnemonic != null  and mnemonic != ''"> and mnemonic = #{mnemonic}</if>
            <if test="password != null  and password != ''"> and password = #{password}</if>
            <if test="salt != null  and salt != ''"> and salt = #{salt}</if>
        </where>
    </select>
    
    <select id="selectUserWalletById" parameterType="Long" resultMap="UserWalletResult">
        <include refid="selectUserWalletVo"/>
        where user_id = #{userId}
    </select>
        
    <insert id="insertUserWallet" parameterType="UserWallet">
        insert into t_user_wallet
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="name != null">name,</if>
            <if test="mnemonic != null">mnemonic,</if>
            <if test="password != null">password,</if>
            <if test="salt != null">salt,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="name != null">#{name},</if>
            <if test="mnemonic != null">#{mnemonic},</if>
            <if test="password != null">#{password},</if>
            <if test="salt != null">#{salt},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateUserWallet" parameterType="UserWallet">
        update t_user_wallet
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="mnemonic != null">mnemonic = #{mnemonic},</if>
            <if test="password != null">password = #{password},</if>
            <if test="salt != null">salt = #{salt},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where user_id = #{userId}
    </update>

    <delete id="deleteUserWalletById" parameterType="Long">
        delete from t_user_wallet where user_id = #{userId}
    </delete>

    <delete id="deleteUserWalletByIds" parameterType="String">
        delete from t_user_wallet where user_id in 
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>