<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.ecsoya.sword.user.mapper.UserLevelMapper">
    
    <resultMap type="UserLevel" id="UserLevelResult">
        <result property="userId"    column="user_id"    />
        <result property="loginName"    column="login_name"    />
        <result property="email"    column="email"    />
        <result property="mobile"    column="mobile"    />
        <result property="levelId"    column="level_id"    />
        <result property="type"    column="type"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="verifyTime"    column="verify_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectUserLevelVo">
        select a.user_id, b.login_name, b.email, b.mobile, a.level_id, a.type, a.status, a.create_time, a.update_time, a.verify_time, a.remark from t_user_level a
        left join (select user_id as bid, login_name, email, phonenumber as mobile from sys_user) as b on a.user_id = b.bid
    </sql>

    <select id="selectUserLevelList" parameterType="UserLevel" resultMap="UserLevelResult">
        <include refid="selectUserLevelVo"/>
        <where>  
            <if test="levelId != null "> and level_id = #{levelId}</if>
            <if test="type != null "> and type = #{type}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="verifyTime != null "> and verify_time = #{verifyTime}</if>
        </where>
    </select>
    
    <select id="selectUserLevelById" parameterType="Long" resultMap="UserLevelResult">
        <include refid="selectUserLevelVo"/>
        where user_id = #{userId}
    </select>
        
    <insert id="insertUserLevel" parameterType="UserLevel">
        insert into t_user_level
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="levelId != null">level_id,</if>
            <if test="type != null">type,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="verifyTime != null">verify_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="levelId != null">#{levelId},</if>
            <if test="type != null">#{type},</if>
            <if test="status != null">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="verifyTime != null">#{verifyTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
         on duplicate key update 
		<trim prefix="" suffixOverrides=",">
			<if test="levelId != null">level_id = #{levelId},</if>
            <if test="type != null">type = #{type},</if>
            <if test="status != null">status=#{status},</if>
			<if test="createTime != null">update_time = #{createTime},</if>
			<if test="remark != null">remark = #{remark},</if>
		</trim>
    </insert>

    <update id="updateUserLevel" parameterType="UserLevel">
        update t_user_level
        <trim prefix="SET" suffixOverrides=",">
            <if test="levelId != null">level_id = #{levelId},</if>
            <if test="type != null">type = #{type},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="verifyTime != null">verify_time = #{verifyTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where user_id = #{userId}
    </update>

    <delete id="deleteUserLevelById" parameterType="Long">
        delete from t_user_level where user_id = #{userId}
    </delete>

    <delete id="deleteUserLevelByIds" parameterType="String">
        delete from t_user_level where user_id in 
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

	<select id="selectUserLevelCount" parameterType="Long" resultType="Long">
		select count(*) from t_user_level where status = 0 and level_id = #{levelId}		
	</select>
</mapper>